# Sample workflow to access AWS resources when workflow is tied to branch
# The workflow Creates static website using aws s3
name: AWS example workflow
on:
  push:
    branches: "main"
env:
  BUCKET_NAME : "ziirui-s3-bucket-test-1"
  AWS_REGION : "us-east-1"
  cy_actions_working_dir: "./cypress"
  tf_actions_working_dir: "./infra"
#  permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
  pull-requests: write
jobs:
  S3PackageUpload:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::211125468825:role/github-cicd
          role-session-name: aws_frontend_workflow
          aws-region: ${{ env.AWS_REGION }}
      # Upload a file to AWS s3
      - name:  Copy Actual_Resume_Web to s3
        run: |
          aws s3 cp --recursive ./Actual_Resume_Web s3://${{ env.BUCKET_NAME }}/  --exclude ".DS_Store" 
    

  
  Cypress-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Cypress_Test
      #   uses: cypress-io/github-action@v6
      #   with: 
      #     working-directory: ${{ env.cy_actions_working_dir }}
      #     auto-cancel-after-failures: 1
      #Setup hashicorp terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform_version: "1.8.3"

      # terraform plan
      - name: plan
        working-directory: ${{ env.tf_actions_working_dir }}
        run: |
          terraform init
          Terraform Validate
          terraform plan -no-color
          

      # - run: echo ${{ steps.plan.outputs.stdout }}
      # - run: echo ${{ steps.plan.outputs.stderr }}
      # - run: echo ${{ steps.plan.outputs.exitcode }}

  #     - name: Terraform Plan Status
  #       runs: |
  #         if [[ ${{ steps.plan.outputs.exitcode }} != 0 ]]; then
  #           exit 1;
  #         fi


      







      # - uses: actions/github-script@v7
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #   with:
      #     script: |
      #       const output = 

      #       </details>

      #       #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

      #       <details><summary>Show Plan</summary>

      #       \`\`\`\n
      #       ${process.env.PLAN}
      #       \`\`\`

      #       </details>
      #       *Pusher: @${{ github.actor }}, Action: \`${{ github event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })
