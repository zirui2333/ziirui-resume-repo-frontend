[{"content":"Introduction I recently came across an really insightful article written by Mark Levis. In the article, he brought up several limitations of modern AI. Particularly one points I want to address:\nLack of Understanding and Common Sense\nAI systems, despite their advanced capabilities in specific domains, lack a deep understanding of the world. They operate based on patterns learned from data without fully grasping the underlying concepts. Common-sense reasoning, intuitive understanding, and contextual awareness are areas where AI still falls short.\nThis point really attracts my attention, because I had so many similar \u0026ldquo;unconvinient\u0026rdquo; experiences with prompting AI. For example, one time I had this idea to let AI help me generate an animations for my website (The Hover Anamation for profile image). Even when I broken down the steps clearly, it still misunderstood my intentions. This miscommunication resulted in outputs far from what I expected, that I had to go back, repeatly interact and refine my goal.\nThe Growing Field of AI Prompting I believe I\u0026rsquo;m not the only one standing in this struggle. Many others also have this issue when try to communicate effectively with AI for their desired results. This has led to the rise of a new profession: AI Prompt Engineering, where experts craft optimal prompts to extract precise outputs from AI systems.\nSome developers even share their prompt templates online, such as the repo Thinking-Claude. These templates are incredibly useful but most of them are for technical development. For broader domains like: philosophy, daily routines, relationships, or even virtual coaching, these templates may not be the most suitable approach.\nLong story short, there simply aren‚Äôt enough templates to cover every domain in life.\nMoreover, not everyone has professional CS background to write complex prompts. For individuals who aren\u0026rsquo;t familiar in this field or who are older adults, using AI can feel inaccessible and feel being left behind.\nA Solution: Guided Prompting To address this issue, I propose developing a Large Language Model (LLM) that specifies user\u0026rsquo;s prompt. Here‚Äôs how it works:\nUsers input their original prompt into the model. The LLM asks a series of guided questions based on the user‚Äôs input. These questions help refine the prompt, narrowing it down to ensure the AI delivers accurate and effective results. For better clarity, I constructed a breakdown graph below. Logic Diagram Here‚Äôs a conceptual diagram of how the system would function:\nCredit / Inspiration: Akinator The idea for this project comes from a mind reading game called Akinator. In this game, players think of a character, and the app asks a series of questions to guess who it is. Similarly, the proposed LLM would ask targeted questions to clarify the user‚Äôs request.\nHowever, unlike Akinator, where players may be uncertain about a character‚Äôs background, users of this LLM typically have a clear idea of the outcome they want. This clarity allows the LLM to focus its questions and guide users toward creating a highly specific prompt. The user simply answers ‚Äúyes‚Äù or ‚Äúno,‚Äù and the LLM refines the input step by step.\nConclusion This is just my little thought on current AI, but there\u0026rsquo;re defintely more approaches, and we also have to take into account that allegedly some AI are degraded on purpose to avoid the violation of laws. So I\u0026rsquo;ll try my best to implement this LLM, hope one day it helps the society!\n","permalink":"https://www.ziirui-resume-website.com/posts/tech/llm/","summary":"Introduction I recently came across an really insightful article written by Mark Levis. In the article, he brought up several limitations of modern AI. Particularly one points I want to address: Lack of Understanding and Common Sense AI systems, despite their advanced capabilities in specific domains, lack a deep understanding of the world. They operate based on patterns learned from data without fully grasping the underlying concepts. Common-sense reasoning, intuitive understanding, and contextual awareness are areas where AI still falls short. This point really attracts my attention, because I had so many similar \u0026ldquo;unconvinient\u0026rdquo; experiences with prompting AI. For example, one time I had this idea to let AI help me generate an animations for my website (The Hover Anamation for profile image). Even when I broken down the steps clearly, it still misunderstood my intentions. This miscommunication resulted in","title":"Solution and Thought on Prompting AI Limit"},{"content":"Under construction. Preparing for final exam now. I\u0026rsquo;ll keep updating this post during the review in case I found something interesting but forget to write it down.\n","permalink":"https://www.ziirui-resume-website.com/posts/tech/blockchain_class_thought/","summary":"Under construction. Preparing for final exam now. I\u0026rsquo;ll keep updating this post during the review in case I found something interesting but forget to write it down.","title":"Blockchain - Myth Unveiled"},{"content":"1. Preface There‚Äôs something magical about reconnecting with nature after live in the city for a long time. This trip was born out of two simple purposes:\nTo visit the Bear Mountain for the first time. Honestly, I was terrified by the name as it sounded like a bear habitat / haunt, imagining bears lurking around every corner. So I told my concern to my sister , and she assured me with a laugh: \u0026ldquo;It‚Äôs safe. It‚Äôs government-protected.\u0026rdquo; Then she paused, \u0026ldquo;But yeah, there might be bears. üòÇ\u0026rdquo;\nTo escape and breathe. 2024 has been\u0026hellip; tough. Six spring classes, summer and fall electives, building this portfoilo website, preparing for master\u0026rsquo;s applications, and hunting internships; it‚Äôs been a marathon. While the results haven‚Äôt been bad, but let‚Äôs be real: Everyone needs a break. A chance to leave the city behind, shake off the stress, and lose myself in nature‚Äôs embrace.\n2. The trip We reached the peak around 4 PM. The weather is absolutly perfect, golden sunshine, chiiling wind, neither too hot nor too cold.\nBreathtaking doesn‚Äôt even begin to describe it.\n(The bridge led us to the mountain) (This little lake island‚Äîno idea what it‚Äôs called, but it looks like the ideal spot to retire. üëç) (A view from the right side of the peak) 3. Conclusion We chose a Monday trip, avoiding holidays and peak hours, thankfully, the roads were clear. If you‚Äôre planning a visit, I highly recommend doing the same. Weekends are famous for its super crowded traffic that can leave you stuck in the halfway up to the mountain.\nIn the end, Autumn and sunshine are a match made in heaven. Every moment, from the drive up to the walk downn, was a visual feast. Bear Mountain is more than a destination; it\u0026rsquo;s a memorable journey to be made.\nOne song I found perfectly match along the trip (If you know Chinese): The Key - JJ Lin\nGo see it for yourself. You won‚Äôt regret it.\n","permalink":"https://www.ziirui-resume-website.com/posts/life/bear_mountain/","summary":"1. Preface There‚Äôs something magical about reconnecting with nature after live in the city for a long time. This trip was born out of two simple purposes: To visit the Bear Mountain for the first time. Honestly, I was terrified by the name as it sounded like a bear habitat / haunt, imagining bears lurking around every corner. So I told my concern to my sister , and she assured me with a laugh: \u0026ldquo;It‚Äôs safe. It‚Äôs government-protected.\u0026rdquo; Then she paused, \u0026ldquo;But yeah, there might be bears. üòÇ\u0026rdquo; To escape and breathe. 2024 has been\u0026hellip; tough. Six spring classes, summer and fall electives, building this portfoilo website, preparing for master\u0026rsquo;s applications, and hunting internships;","title":"A Fall Trip to Bear Mountain"},{"content":"Introduction One question called The Spiral Matrix problem puzzled me for quite some time. After studying the solution, I realized it‚Äôs not as difficult as it seems. However, I wanted to write this post to help you understand the patterns of Matrix Iteration, hope it might give you some idea.\nThis guide focuses on recognizing iteration patterns in matrices, enabling you to solve similar problems with ease. The same logic can also be applied to counter-clockwise traversal.\nThe Code Well, let‚Äôs begin with the complete code and then break it down step by step:\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; using namespace std; void Matrix_Iteration(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; matrix){ if(matrix.empty() || matrix[0].empty()){ return; } int top = 0, bottom = matrix.size() - 1; int left = 0, right = matrix[0].size() - 1; while(top \u0026lt;= bottom \u0026amp;\u0026amp; left \u0026lt;= right){ // Go from left to right for(int col = left; col \u0026lt;= right; ++col){ cout \u0026lt;\u0026lt; matrix[top][col]; } ++top; // Go from top to bottom for(int row = top; row \u0026lt;= bottom; ++row){ cout \u0026lt;\u0026lt; matrix[row][right]; } --right; // Come back from right to left if(top \u0026lt;= bottom){ for(int col = right; col \u0026gt;= left; --col){ cout \u0026lt;\u0026lt; matrix[bottom][col]; } --bottom; } // Come back from bottom to top if(left \u0026lt;= right){ for(int row = bottom; row \u0026gt;= top; --row){ cout \u0026lt;\u0026lt; matrix[row][left]; } ++left; } } } int main() { vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; matrix = { {1,2,3}, {4,5,6}, {7,8,9} }; Matrix_Iteration(matrix); return 0; } The Pattern Breakdown \u0026ldquo;Wow, that\u0026rsquo;s a lot of code!\u0026rdquo; you might say. Don\u0026rsquo;t panic, we\u0026rsquo;re about to start, and please give me just 3 minutes, and you\u0026rsquo;ll walk away with no more fear for Matrix Iteration üòâ!\nNote: I\u0026rsquo;ll use C++ to explain the code, but the logic is the same for other languages.\n1. Initialization I won\u0026rsquo;t bother to explain this part, as it is self explanatory.\nvoid Matrix_Iteration(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; matrix){ //Check if the matrix is empty, they\u0026#39;re edge cases. if(matrix.empty() || matrix[0].empty()){ return; } //`top` and `bottom`: Control vertical movement (up and down). //`left` and `right`: Control horizontal movement (left and right). int top = 0, bottom = matrix.size() - 1; int left = 0, right = matrix[0].size() - 1; } As simple as they\u0026rsquo;re only edge cases, and variables that define the boundaries for traversal and are updated after each loop. I believe you can understand this part.\nPattern 1: Switching Between Rows and Columns The first pattern you should notice is how the inner For loops switch between row and col, as it goes like: col -\u0026gt; row -\u0026gt; col -\u0026gt; row. Therefore, as long as you figure out the first one (row OR col), you can apply the rest without thinking.\nIn a clockwise motion, we traverse to right first, so the column is changing, and we start with column index.\n//The while loop condition is self explanatory. while(top \u0026lt;= bottom \u0026amp;\u0026amp; left \u0026lt;= right){ // Don\u0026#39;t worry about the ending increment or decrement yet, just focus on the switch between row and col. for(int col = ; col ; ++col){ } for(int row = ; row ; ++row){ } for(int col = ; col ; --col){ } for(int row = ; row ; --row){ } } Pattern 2: The Constants Let\u0026rsquo;s now focus on each individual For loop. Like I said, the only thing you should figure out, is the first For loop, and let\u0026rsquo;s do that. First move, we go from 1 -\u0026gt; 2 -\u0026gt; 3 (from left to right), and we are currently on the top row.\n// Go from left to right for(int col = left; col \u0026lt;=right ; ++col){ cout \u0026lt;\u0026lt; matrix[top][col]; // `Top` is constant } And whatever the constant you have in the above loop, increment or decrement it accordingly to shift the boundary inward. And you\u0026rsquo;ll see how the next For Loop surpisingly start with that constant again!\nfor(int col = left; col \u0026lt;=right ; ++col){ cout \u0026lt;\u0026lt; matrix[top][col]; // Notice the `top` we had } ++top; // Notice the `top` again for(int row = top; row \u0026lt;= bottom; ++row){ // Notice the `top` again! } for(int col = ; col ; --col){ } for(int row = ; row ; --row){ } In summary:\nThe constant used in the current loopwill be decremented or incremented The constatn will be used in next loop interation again. So if we know this pattern, then for the 2nd for loop (goes from top to bottom along the right side), right should be used, changed and re-applied in next loop accordingly.\nAttempt the pattern for(int col = left; col \u0026lt;=right ; ++col){ cout \u0026lt;\u0026lt; matrix[top][col]; } ++top; for(int row = top; row \u0026lt;= bottom; ++row){ cout \u0026lt;\u0026lt; matrix[row][right]; // See the `right` here } --right; // See the `right` here for(int col = right; col \u0026gt;= left ; --col){ // See the `right` } for(int row = ; row ; --row){ } Apply to the rest If this makes sense to you, let\u0026rsquo;s finish the rest of the loop.\nfor(int col = left; col \u0026lt;=right ; ++col){ cout \u0026lt;\u0026lt; matrix[top][col]; } ++top; for(int row = top; row \u0026lt;= bottom; ++row){ cout \u0026lt;\u0026lt; matrix[row][right]; } --right; for(int col = right; col \u0026gt;= left; --col){ cout \u0026lt;\u0026lt; matrix[bottom][col]; } --bottom; for(int row = bottom; row \u0026gt;= top; --row){ cout \u0026lt;\u0026lt; matrix[row][left]; } ++left; Pattern 3: Handling Edge Cases The last two loops (right to left, bottom to top) require extra care to avoid out-of-bounds access. Use if statements to check whether the boundaries are still valid:\nSome might be hard to recognize which variables to write for the if statement. So here is a simple trick: The if statement condition is opposite to the for loop condition.\n//The last 2 loops //Because the For Loop checks the `left` and `right`, therefore we check the if statement with `top` and `bottom`. if(top \u0026lt;= bottom){ for(int col = right; col \u0026gt;= left; --col){ //code... } --bottom; } //Same logic. The For Loop checks the `top` and `bottom` to stay in bound, therefore we check `left` and `right`. if(left \u0026lt;= right){ for(int row = bottom; row \u0026gt;= top; --row){ //code... } ++left; } Summary of Patterns For Loop Order: Alternate between columns and rows. Boundary Updates: Adjust and re-use the constant variable after each loop. Edge Case Check: Use if statements to handle edge case, they\u0026rsquo;re opposite to the for loop. Final Thoughts Wola! You\u0026rsquo;ve made it! I hope this post gives you some idea on how to solve a matrix iteration. This type of question frequently appears in interviews, but a lot of time, companies just want to test your ability if you can tranverse it either clockwise or counter-clockwise.\nIf you have any questions, please feel free to email me. I\u0026rsquo;d be happy to help.\nHappy coding! üòä\nAdditional Challenge: Counter-Clockwise This is extra challenge for you to reinforce the pattern. Without further saying, let\u0026rsquo;s get started.\n1. Basic Structure void Matrix_Iteration_counter_clockwise(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; matrix){ // Edge cases and initalization don\u0026#39;t change. if(matrix.empty() || matrix[0].empty()){ return; } int top = 0, bottom = matrix.size() - 1; int left = 0, right = matrix[0].size() - 1; while(top \u0026lt;= bottom \u0026amp;\u0026amp; left \u0026lt;= right){ } } 2. The For Loops // The iteration goes from top to bottom first (we start with row), so the pattern is row -\u0026gt; col -\u0026gt; row -\u0026gt; col.\nfor(int row = ; row ; ++row){ } for(int col = ; col ; ++col){ } for(int row = ; row ; --row){ } for(int col = ; col ; --col){ } 3. The First For First loop goes from top to bottom and stays on the left side, so we start with top.\nfor(int row = top; row \u0026lt;= bottom; ++row){ cout \u0026lt;\u0026lt; matrix[row][left]; } Then from rule we\u0026rsquo;ve talked about, the constant from the current iteration will be updated and re-used in next iteration.\nfor(int row = top; row \u0026lt;= bottom; ++row){ cout \u0026lt;\u0026lt; matrix[row][left]; } ++left; for(int col = left; col \u0026lt;= right ; ++col){ } We\u0026rsquo;re now at the bottom of the matrix, and going from left to right.\nfor(int row = top; row \u0026lt;= bottom; ++row){ //code... } //code... for(int col = left; col \u0026lt;= right ; ++col){ cout \u0026lt;\u0026lt; matrix[bottom][col]; } --bottom; for(int row = bottom; row \u0026gt;= top ; --row){ } Apply to the rest of the loops.\nfor(int row = top; row \u0026lt;= bottom; ++row){ cout \u0026lt;\u0026lt; matrix[row][left]; } ++left; for(int col = left; col \u0026lt;= right ; ++col){ cout \u0026lt;\u0026lt; matrix[bottom][col]; } --bottom; for(int row = bottom; row \u0026gt;= top ; --row){ cout \u0026lt;\u0026lt; matrix[row][right]; } --right; 4. The Last 2 Loops Add if statement for the last 2 loops. Put the opposite variable like this:\nIf you see left \u0026amp; right in the loop, you put top \u0026amp; bottom in the if statement. If you see top \u0026amp; bottom in the loop, you put left \u0026amp; right in the if statement. if(top \u0026lt;= bottom){ for(int col = right; col \u0026gt;= left; --col){ //code... } //code... } if(left \u0026lt;= right){ for(int row = bottom; row \u0026gt;= top; --row){ //code... } //code... } 5. Final Code void Matrix_Iteration_counter_clockwise(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; matrix){ if(matrix.empty() || matrix[0].empty()){ return; } int top = 0, bottom = matrix.size() - 1; int left = 0, right = matrix[0].size() - 1; while(top \u0026lt;= bottom \u0026amp;\u0026amp; left \u0026lt;= right){ for(int row = top; row \u0026lt;= bottom; ++row){ cout \u0026lt;\u0026lt; matrix[row][left]; } ++left; for(int col = left; col \u0026lt;= right; ++col){ cout \u0026lt;\u0026lt; matrix[bottom][col]; } --bottom; if(left \u0026lt;= right){ for(int row = bottom; row \u0026gt;= top; --row){ cout \u0026lt;\u0026lt; matrix[row][right]; } --right; } if(top \u0026lt;= bottom){ for(int col = right; col \u0026gt;= left; --col){ cout \u0026lt;\u0026lt; matrix[top][col]; } ++top; } } } int main() { vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; matrix = { {1,2,3}, {4,5,6}, {7,8,9} }; Matrix_Iteration_counter_clockwise(matrix); return 0; } ","permalink":"https://www.ziirui-resume-website.com/posts/tech/matrix_loop/","summary":"Introduction One question called The Spiral Matrix problem puzzled me for quite some time. After studying the solution, I realized it‚Äôs not as difficult as it seems. However, I wanted to write this post to help you understand the patterns of Matrix Iteration, hope it might give you some idea. This guide focuses on recognizing iteration patterns in matrices, enabling you to solve similar problems with ease. The same logic can also be applied to counter-clockwise traversal. The Code Well, let‚Äôs begin with the complete code and then break it down step by step: #include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; using namespace std; void Matrix_Iteration(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; matrix){ if(matrix.empty() || matrix[0].empty()){ return; } int top = 0, bottom = matrix.size() - 1; int left = 0, right = matrix[0].size() - 1; while(top \u0026lt;= bottom \u0026amp;\u0026amp; left \u0026lt;=","title":"Struggle with Matrix ClockWise Iteration? Here is all you need to know."},{"content":" Introduction This guide is based on the Cloud Resume Challenge and follows the steps listed inside it. That said, I strongly recommend purchasing the original book as it covers much more details. This post will only show the method I\u0026rsquo;ve done for my challenge. Think of this post as a helpful guide rather than a complete answer key.\nThe elements cover in this post:\nAWS (S3 bucket, Cloudfront, IAM, Lambda Function, DynamoDB, Identity Provider OIDC, DNS, SSL Manager and more) CI/CD (Git Action) infrastructure as code (Terraform) Frontend Language (HTML, CSS) -\u0026gt; Now switch to Hugo Backend Language (Python, Javascript) Test (Cypress) Please read through the \u0026lt;challenge\u0026gt; on the offical website before looking into my post, because I will directly dive into how I solve the problem. 1. Certification The challenge recommonds the Certified Cloud Practitioner as a basic level. However I passed the Solutions Architect - Associate for a higher level approach. Ultimately the certificate offers professional knowledge regarding cloud services.\nQ\u0026amp;A Q: Is getting a certificate worthy? A: The short answer: yes and no. If you want to become a cloud engineer or similar role (Site reliabilty Engineer, DevOps engineer), the answer is yes! If your goal is just to learn cloud services, then a certificate will not be worthy. Here are 2 major benefits: 1. Experience from the Certificate: The resume challenge will guide you through a limited set of AWS resources, specifically focusing on how to host a static website. Most of the time, you will need to handle various scenarios. Let me offer you some cases: - Are you familiar with VPC networks and EC2 instances, which are commonly used by companies? - How to prevent accidental deletion in bucket? (Versioning / MFA) - Do you understand the architectural difference between a company that wants to migrate services from on-premise to the cloud while treating the on-premise data center as a backup, versus a company that wants to extend its data storage to the cloud but keep all services hosted on-premises? - ... These values are not provided in resume challenge , but you will encounter in certification test. So like I said, define your goal of this challenge, whether you want to dive deep into the cloud world or not. 2. Career: It does add some values to your resume to help you stand out from other candidates, especially with this cloud project. Q: Any good resources you recommond to prepare for the exam? A: I used the Dojo bundle along with their exam. This was the only resource I used to prepare for the exam. You are absolutely free to explore any other lessons. (Note: I do not receive any compensation from Dojo and have no personal affiliation with them. I recommend it simply because it was the only resource I used; I cannot guarantee the quality of other materials). *Impotant* Don\u0026#39;t pay full price for the certification exam! Look for coupons or vouchers online! 2. Getting Started with AWS and IAM role Head over to AWS and register an account. Yes, you‚Äôll need to enter your credit card info, but don‚Äôt panic, AWS has a free plan that lasts for a year.\nAs for the IAM role, I recommend just sticking with the root user for now. It gives you full access to all the services, otherwise you\u0026rsquo;ll be tired with a lot of access denials later on.\nWarning: This is a bad practice for security reasons. Don\u0026#39;t do this long term! Especially if you\u0026#39;re setting this up in a real production environment! 3. HTML \u0026amp; CSS The foundation of building a website\u0026rsquo;s frontend: How you code it depends on your own style and taste. I use Hugo along with its Papermod theme to build my website. I strongly recommend using an existing tool to build your portfolio instead of hand-coding everything with plain HTML and CSS. Here‚Äôs why:\nIf you\u0026rsquo;re just starting out and don\u0026rsquo;t plan on becoming a frontend developer, it\u0026rsquo;s really not the best use of your time. Let‚Äôs be real, writing perfect CSS for a beautifully designed website is super hard, especially when you\u0026rsquo;re still learning. Even if you manage to finish your website and the design meets your expectations, consider whether the time spent was worth the result you achieved. Some other popular tools: Adobe, Notion, Wix\nI\u0026rsquo;m definitely not trying to discourage anyone from writing their own HTML and CSS. In fact, I absolutely take my hat off for anyone who practice writing good CSS code. My point is just a friendly heads-up. I personally spent over 30 hours coding my site from scratch, and honestly, it still didn‚Äôt come close to what Hugo gave me in way less time. Switching to Hugo was a game changer.\nI came across an HTML \u0026amp; CSS Tutorial that I found really interesting. Just to clarify, I didn‚Äôt use this tutorial in my own learning journey, but I thought the course designer‚Äôs final task of building a YouTube-style webpage was pretty cool.\n4. Static Website We store the HTML \u0026amp; CSS files on S3 bucket. Here\u0026rsquo;s how you can do it:\nLog in to your AWS S3 console. Click on \u0026ldquo;Create bucket\u0026rdquo; (it\u0026rsquo;s in an orange box). Enter a unique bucket name. This name has to be unique across all AWS accounts in globe. Then, hit \u0026ldquo;Create bucket\u0026rdquo;. [You don‚Äôt need to change any other settings.] Go to your newly created bucket, click Upload, and upload your files. Make sure that your index.html file is right in the root directory of the bucket. This means when you click on your bucket, you should see index.html directly in the file section, not inside any folder! For future convinience, use AWS CLI to upload the files by terminal. A useful tutorial video from Frank if you need\nCommands we oftenly use:\n// This command updates new file and delete the files that are not presented in the new updated repository. aws s3 sync ./your_folder/ s3://your-bucket --delete --exclude \u0026#34;*.DS_Store\u0026#34; --exclude \u0026#34;.gitignore\u0026#34; --exclude \u0026#34;.git/*\u0026#34; // Clean up all files in your bucket aws aws s3 rm s3://your-bucket --recursive 5. HTTPS Using HTTPS with CloudFront has several benefits:\nEncryption: HTTPS encrypts your content while it\u0026rsquo;s being transferred between AWS and the user\u0026rsquo;s PC, keeping it secure. Traffic Control: CloudFront helps manage traffic more efficiently and scales with demand. (Distribution got its name for a reason :) Cost: Serving S3 content via CloudFront is FREE. (Just a note: if you\u0026rsquo;re hosting your website via S3, AWS does charge for read times.) Let me break down the CloudFront setup for you:\nLog in to your AWS CloudFront console. Click on \u0026ldquo;Create distribution\u0026rdquo; (it\u0026rsquo;s in an orange box). Update the following sections: Origin domain: Choose the bucket you created. Origin access: Set this to Origin access control settings to ensure that only your distribution can access the S3 content. Click Create New OAC, then Create. Viewer Protocol policy: Select Redirect HTTP to HTTPS. WAF: Do Not Enable Default root object:Only change this if your index.html is named something different, like \u0026ldquo;project1.html\u0026rdquo; or \u0026ldquo;random_name.html\u0026rdquo;. CloudFront needs to know the name of the root object to serve your content correctly. After creating your distribution, wait about 3-5 minutes for it to deploy. Once it\u0026rsquo;s ready, go to your new distribution details. You\u0026rsquo;ll find a section prompting you to create a policy and paste it into S3. Go to S3 -\u0026gt; Permission in the navbar -\u0026gt; Scroll down to Bucket Policy -\u0026gt; Paste your policy there. If you need a policy template, here\u0026rsquo;s one you can use:\n{ \u0026#34;Version\u0026#34;: \u0026#34;2008-10-17\u0026#34;, \u0026#34;Id\u0026#34;: \u0026#34;PolicyForCloudFrontPrivateContent\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;AllowCloudFrontServicePrincipal\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Principal\u0026#34;: { \u0026#34;Service\u0026#34;: \u0026#34;cloudfront.amazonaws.com\u0026#34; }, \u0026#34;Action\u0026#34;: \u0026#34;s3:GetObject\u0026#34;, \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:s3:::your_bucket/*\u0026#34;, \u0026#34;Condition\u0026#34;: { \u0026#34;StringEquals\u0026#34;: { \u0026#34;AWS:SourceArn\u0026#34;: \u0026#34;your_cloudfront_arn\u0026#34; } }, }, ], } Find your ARN Until now, you should be able to see your site from CloudFront URL (Distribution domain name in The above picture) 6. DNS You can buy a domain from anywhere. Some popular options are Route S3, Cloudflare, or any other DNS provider.\nA domain typically costs around $10 a year, and that\u0026rsquo;s the only real expense for this project. Refer to your DNS provider for a simple guide on purchasing the domain, it‚Äôs usually just a simple process of typing the desired domain name, paying, and you‚Äôre good to go. Now, let\u0026rsquo;s move on to connecting your domain with CloudFront so your S3 content can be accessed through your domain (just like how my site is at https://www.ziirui-resume-website.com). We‚Äôll also use AWS Certificate Manager to add SSL for security.\nSteps for Creating SSL and Verifying Your Domain Log in to the Certificate Manager Console CLick Request (orange button) and then Next Enter your domain name (ex: example.com), then hit Request You‚Äôve now created an SSL certificate, but we need to verify that the domain is yours. Here\u0026rsquo;s how to do that:\nScroll down to the Domains section of your new SSL. You‚Äôll see a CNAME name and a CNAME value. these are like a key and value pair. You‚Äôll need to create a record in your DNS provider for each of them. Don\u0026rsquo;t panic! Just search \u0026ldquo;add record in [Your_DNS_provider_name]\u0026rdquo; on your browser for step-by-step videos online. Reminder:\nThe record type is CNMAE. The record name is CNAME name. Record target is the CNAME value. Record status is No Proxy. The Do this step for all of your SSL domains. Once you\u0026rsquo;ve added those records, check back in the Certificate Manager. If everything‚Äôs set up correctly, you‚Äôll see \u0026ldquo;Success.\u0026rdquo; After verification, we have proved the DNS ownership to Certificate Manager, now we can connect DNS with our CloudFront. Step below:\nCopy your CloudFront URL Go to your DNS provider and create two CNAME records: One with Name = www and Target = CloudFront URL. Another with Name = your root domain (e.g., example.com) and Target = CloudFront URL. Final look for DNS provider console:\nSetting SSL in CloudFront (Don't panic! It's simple, you've done most of the job): Go to your CloudFront distribution Under General, click Edit Settings. In Alternate domain name (CNAME), enter your domain (\u0026ldquo;your_root_domain\u0026rdquo; and \u0026ldquo;www.your_root_domain\u0026rdquo;) In Custom SSL certificate, Select your SSL. Under Custom SSL certificate, select the SSL certificate you created. Now, test your website using your domain. If all went well, your content should be accessible via your personal DNS!\n7. Database For this part, we\u0026rsquo;ll be using DynamoDB to keep track of our visitor count.\nHere‚Äôs how to create a DynamoDB table:\nSame as always, open your DynamoDB console Click the Create Table (it\u0026rsquo;s orange). Fill out the form: Table Name: You can choose any name you like. Partition Key: Enter id and select String Table Setting: Choose Customize settings Read/write capacity settings: Set this to On-demand instead of Provisioned to avoid extra charges. Click Create Table Explanation: The partition key can be anything; it\u0026rsquo;s just a way to retrieve the visitor counter from Python later on. We choose On-demand for the table settings to only pay for what we use, rather than the default Provisioned setting which can lead to charge overhead.\nOnce your table is created, click Explore items (found in the orange box at the top right). Scroll down and hit the Create item button. For the id value section, you can enter 1 for simplicity. In the top right corner, click Add new attribute and select Number for the attribute type. This will be used for the visitor count. Create an attribute named count and set its value to 1. Here‚Äôs what it should look like: Now you have an item with an id of 1 and a count value of 1. Next, we‚Äôll set up a Lambda Function to retrieve and increment this value.\n8. Lambda API \u0026amp; Python Setting up a Lambda Fucntion should be pretty straightforward for you. Just a quick tip: make sure to choose the programming language (the Runtime) you prefer for interacting with the database. For this guide, we\u0026rsquo;ll use Python. Remember, this Lambda function will trigger every time someone visits your domain.\nWe‚Äôll be using the Boto3 library for working with DynamoDB in Python. Without further word, here‚Äôs a complete code template for your Lambda function:\nWarning: Don‚Äôt copy this code if you‚Äôre not familiar with Python or the Boto3 library. Doing so without understanding could lead to issues and will only cause you more trouble in the long run. import json import boto3 #connect to table dynamodb = boto3.resource(\u0026#34;dynamodb\u0026#34;) table_name = \u0026#34;your_table_name\u0026#34; table = dynamodb.Table(table_name) def lambda_handler(event, context): id = \u0026#34;your_id\u0026#34; response = table.get_item(Key={ \u0026#39;id\u0026#39;:id }) # If the item exists, increment the count by 1 if \u0026#34;Item\u0026#34; in response: views = response[\u0026#34;Item\u0026#34;][\u0026#34;your_number_type_key_name\u0026#34;] views += 1 table.put_item(Item = { \u0026#34;id\u0026#34; : id, \u0026#34;your_number_type_key_name\u0026#34; : views }) # If the item doesn‚Äôt exist,indicating this is the 1st time our site being visited, then create a view of 1 else: views = 1 table.put_item(Item = { \u0026#34;id\u0026#34; : id, \u0026#34;your_number_type_key_name\u0026#34; : views }) # The content our javascript will receive in html file. return_format = { \u0026#39;statusCode\u0026#39;: 200, \u0026#39;body\u0026#39;: json.dumps({ \u0026#39;message\u0026#39;: \u0026#39;success\u0026#39;, \u0026#39;count\u0026#39;: int(views), \u0026#39;event\u0026#39;: event }) } return return_format After we set up this Python code, you can test your Lambda Function in the AWS console. It should work fine for retrieving DynamoDB data. Now, we need to set up a URL for Lambda so that our local HTML file can trigger this Lambda function.\nSteps to set up the URL: Watch this video for a step-by-step guide.\nNoticeable changes to make:\nAllow Origins: Add your domain values here, such as https://example.com and https://www.example.com Allow headers: Add the value content-type Allow methods: Add POST Max age: Set this to 43200 seconds, which equals 12 hours for caching. Allow credentials: Enable this option to reduce verification times. Click Create Function, and the Function URL should appear at the bottom right corner of your screen. Note: This is a basic setup for convenience, as Function URLs do not address DDoS protection. Two alternative solutions are: 1) Switch to API Gateway for a more web-friendly and secure access method, allowing your website to make requests while restricting access from unauthorized users. 2) Configure the IAM role in Lambda URLs to only allow CORS (your domain) to use the link. 8. Javascript Now that we‚Äôve got the Lambda function reading data from DynamoDB, the next step is getting that data into our HTML file so we can display it on the website. This is where JavaScript comes in handy!\nWe‚Äôll be using a simple format from AWS to help us fetch and display the DynamoDB values.\n(Here is a Javascript tutorial if you need.)\n// Be sure to attch this id in your HTML, (e.g. \u0026lt;p class=\u0026#34;your_counter_id_in_html\u0026#34;\u0026gt; times\u0026lt;/p\u0026gt;) const counter = document.querySelector(\u0026#34;.your_counter_id_in_html\u0026#34;); async function update_views() { try { const response = await fetch(\u0026#34;your_lambda_function_URL\u0026#34;, { method: \u0026#34;POST\u0026#34;, // Set the method to POST headers: { \u0026#34;Content-Type\u0026#34;: \u0026#34;application/json/update_counter\u0026#34;, }, body: JSON.stringify({}), }); const data = await response.json(); counter.innerHTML = `${data.count}`; } catch (error) { counter.innerHTML = `43`; } } update_views(); Congraduation! You\u0026rsquo;ve done the webiste part of this challenge. For the rest content is where we dive into the cloud world on CI/CD and Infrastructure as code. So if you inspire to be a cloud engineer, like to challenge yourself\n9. CI/CD Here\u0026rsquo;s how we‚Äôll use Github Action. If you\u0026rsquo;re not familiar with CI/CD (Continuous Integration and Continuous Deployment), let me give you a quick scenario:\nImagine you push your files to GitHub, but you need those files to be updated on AWS. Without CI/CD, you‚Äôd have to manually update them on AWS, uploading HTML and CSS files to an S3 bucket, updating your Python code in a Lambda function, and possibly adjusting policies in different places. And if a bug pops up after all that work, guess what? You‚Äôd have to go through the whole process again!\nCI/CD automates these tasks, so you don\u0026rsquo;t have to handle all that manual work every time you make a change. In our final result, all you need to do is push your code to GitHub using git push origin main, and GitHub will automatically update the changes on AWS for you.\nSteps to create CI/CD pipeline in github action:\nIn your local repository, create a workflow file called front-end-cicd.yml in the .github/workflows directory. If you don\u0026rsquo;t have the \u0026ldquo;.github\u0026rdquo; and \u0026ldquo;workflows\u0026rdquo; folders, create them manually. You should end up with .github/workflows/front-end-cicd.yml in your repository. Now we‚Äôre writing in YAML. I\u0026rsquo;ll provide you with two templates for your choice: Github OIDC (Recommonded, safe and prevent key leakage) Jakejarvis‚Äôs CI/CD (Not Recommonded for secure reason, but it‚Äôs generally easy to set up) Option 1: Github OIDC The key difference between OIDC and Jakejarviss\u0026rsquo;s CI/CD is that OIDC doesn‚Äôt require your AWS Access Key. Instead, it uses a trusted third-party identity provider for authentication. For example, you can use your Google, GitHub, Facebook, or LinkedIn account to sign in to LeetCode. All these third-party companies are trusted by LeetCode.\nWhen we use GitHub OIDC, GitHub can automatically access your AWS resources based on your GitHub identity, without requiring any AWS keys. This is more secure and convenient.\nSteps to set up OIDC in AWS:\nSet up an identity provider in AWS for GitHub. After creating the OIDC provider, go to the provider and select Assign Role from the top right corner. Select Creating a New Role Modify the following fields, then click Next: Trusted entity type: Web Identity Audience: Select sts.amazonaws.com GitHub organization: Enter your GitHub account name, for example, my name is zirui2333 For the policy, select AdministratorAccess for simplicity, then click Next. Enter a role name of your choice: github_oidc, then click Create Role. Go back to the OIDC provider and select Endpoint verification. Click Manage in Thumbprints and add the hex 1b511abead59c6ce207077c0bf0e0043b1382612 (This might change every year, check online \u0026ldquo;Github Thumbprints + current year\u0026rdquo;), then click Save changes. Steps to set up a CI/CD YAML file in GitHub:\nCopy the following template into your YAML file:\n# Sample workflow to access AWS resources when workflow is tied to branch # The workflow Creates static website using aws s3 name: AWS Frontend on: push: paths: - \u0026#34;Your_html_folder/**\u0026#34; # Trigger CI/CD on changes in your HTML folder branches: \u0026#34;main\u0026#34; env: BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET }} AWS_REGION: \u0026#34;us-east-1\u0026#34; # permission can be added at job level or workflow level permissions: id-token: write # This is required for requesting the JWT contents: read # This is required for actions/checkout jobs: #Upload frontend code S3PackageUpload: runs-on: ubuntu-latest steps: - name: Git clone the repository uses: actions/checkout@v4 - name: configure aws credentials uses: aws-actions/configure-aws-credentials@v3 with: role-to-assume: \u0026#34;github-cicd\u0026#34; # Or replace to the name you set up for iam role role-session-name: aws_frontend_workflow aws-region: ${{ env.AWS_REGION }} # Upload a file to AWS s3 - name: Copy Actual_Resume_Web to s3 run: aws s3 sync ./Your_html_folder/ s3://${{ env.BUCKET_NAME }}/ --delete --exclude \u0026#34;*.DS_Store\u0026#34; --exclude \u0026#34;.gitignore\u0026#34; --exclude \u0026#34;.git/*\u0026#34; Remember to add Secrets for your S3 bucket name and other credentials.\nOnce you‚Äôve added the secret and modified the template, push the file to GitHub using the following commands:\ngit add .github/workflows/front-end-cicd.yml git commit -m \u0026#34;Create CI/CD pipeline for frontend\u0026#34; git push origin main Option 2: Jakejarvis‚Äôs CI/CD Copy the jakejarvis\u0026rsquo;s CI/CD template into your YAML file, and replace the top part with:\non: push: paths: - \u0026#34;Your_html_folder/**\u0026#34; # This line indicates that CI/CD will only happen if git push contains any files on html folder, in other words, CI/CD will trigger only if there\u0026#39;s any change in your frontend code branches: \u0026#34;main\u0026#34; Make your S3 bucket publicly readable. Ensure your S3 bucket settings are also configured for public access.\nAdd Secrets to GitHub:\nFollow the steps for adding Secrets, including your S3 bucket name and Access Key ID. I previously shared a video from Frank explaining how to create an access key. You can revisit that here if needed. If you\u0026rsquo;ve created the access key but can\u0026rsquo;t view it again due to AWS\u0026rsquo;s security policies, you can retrieve it from your terminal by running: cd ~ # Go to root cat .aws/credentials # Print the access key and id After locating your keys, add them to your GitHub Secrets. Important: Please comment out the SOURCE_DIR: \u0026lsquo;public\u0026rsquo; line in the Jakejarvis template to prevent conflicts in your system.\nOnce you have modified the template and added your Secrets, push the file to GitHub with:\ngit add .github/workflows/front-end-cicd.yml git commit -m \u0026#34;Create CI/CD pipeline for frontend\u0026#34; git push origin main 10. Infrastructure as code This is another essential skill in cloud computing world. We will use Terraform.\nFor the people who doesn\u0026rsquo;t know Infrastructure as code, it\u0026rsquo;s used for cloud service Automation, in our case is AWS services like S3 bucket, dynamoDB, cloudFront distribution, SSL manager and more\u0026hellip;. Let me give you a scenario: Imagine you went through all the steps I listed previously, you saw lots of screenshot configuration from AWS console right? They\u0026rsquo;re one of the ways how you can create services in AWS, but imagine soemthing goes wrong, and you need to re-create all the services again (Oh No)! You defintealy don\u0026rsquo;t want to manually went over every single service creation again. Therefore here comes the Infrastructure as code, in simple word, we will write codes for those services, sepecifically their configuratioins. So that next time if you want to recreate a series of services, you can just run the code, and it will automatically create everything for you! Sounds amazing right? Let\u0026rsquo;s get started!\nSteps for terraform configuaration:\nIf you\u0026rsquo;re using VScode, go ahead with this link . If you\u0026rsquo;re using other compiler, search \u0026ldquo;Terraform Installation\u0026rdquo; + \u0026ldquo;Your compilor name\u0026rdquo; for guideline Once installation finish, go to your root repo and create a folder named infra. Inside it, create two files main.tf and provider.tf. So their paths should be infra/main.tf and infra/provider.tf Note: Infra folder is just a name for you to distinguish other code from infrastructure part, you can name it anything you want. \u0026#34;main.tf\u0026#34; and \u0026#34;provider.tf\u0026#34; are mandatory, \u0026#34;provider.tf\u0026#34; is where to write configuration for Terraform specifically, telling it we\u0026#39;re writing code for AWS, the version of Terraform we\u0026#39;re gonna use and the region our AWS services to be, blablabla. \u0026#34;main.tf\u0026#34; in the other hand is gonna be the massive place we write AWS services configuration. Don\u0026#39;t panic, I will show you examples on how to do it! Write provider.tf copy the code: # Specify Terraform works for AWS, the tool and the version of the tool terraform { required_providers { aws = { source = \u0026#34;hashicorp/aws\u0026#34; version = \u0026#34;\u0026gt;= 4.9.0\u0026#34; } } # All the configuration status will store in this bucket. I will explain the reason for this later. backend \u0026#34;s3\u0026#34; { bucket = \u0026#34;your-terraform-backup-bucket-name\u0026#34; key = \u0026#34;terraform.tfstate\u0026#34; region = \u0026#34;us-east-1\u0026#34; } } # Simply the regions provider \u0026#34;aws\u0026#34; { alias = \u0026#34;us_east_1\u0026#34; region = \u0026#34;us-east-1\u0026#34; } Because we specify a bucket to update our Terraform code, go to console to create a bucket or using the command below if you have AWS CLI install.\n# Remember bucket name needs to be globally unique, replace \u0026#34;your-terraform-backup-bucket-name\u0026#34; for another name you like aws s3 mb s3://your-terraform-backup-bucket-name --region us-east-1 The reason for backup bucket is that \u0026#34;terraform.tfstate\u0026#34; is a file terraform will create to manage our AWS services that have been created. Just like your github will have \u0026#34;.git\u0026#34; to check new change in your local code that are different from the one on the github. Terraform has this file created locally. However, let I said previously in CI/CD portion, we want implement an automation pipeline that once we push the code the github, github will deal with AWS instead of us dealing with it. So we will make our terraform to After succefully configuring provider.tf, we\u0026rsquo;ll dive into the boss provider.tf\n11. Test Cypress This section is still in progress, so stay tuned!\nFeel free to check out my other feature in my portfolio!\n","permalink":"https://www.ziirui-resume-website.com/posts/tech/cloud_website/","summary":"Introduction This guide is based on the Cloud Resume Challenge and follows the steps listed inside it. That said, I strongly recommend purchasing the original book as it covers much more details. This post will only show the method I\u0026rsquo;ve done for my challenge. Think of this post as a helpful guide rather than a complete answer key. The elements cover in this post: AWS (S3 bucket, Cloudfront, IAM, Lambda Function, DynamoDB, Identity Provider OIDC, DNS, SSL Manager and more) CI/CD (Git Action) infrastructure as code (Terraform) Frontend Language (HTML, CSS) -\u0026gt; Now switch to Hugo Backend Language (Python, Javascript) Test (Cypress) Please read through the \u0026lt;challenge\u0026gt; on the offical website before looking into my post, because I will directly dive into how I solve the problem. 1. Certification The challenge recommonds the Certified Cloud Practitioner as a basic level.","title":"Tutorial - An Entry DevOps project"},{"content":"Introduction Neetcode 150 is a popular collection of Leetcode problems designed to help programmers prepare for coding interviews. However, the tutorial videos may not always provide the most comprehensive explanations for full understanding. Therefore, I\u0026rsquo;ve decided to document my thought process while solving these problems, in the hope that it might help some of my readers.\nNote: This post won\u0026#39;t cover all the questions from Neetcode 150. Instead, I\u0026#39;ll focus on the ones I found particularly tricky / challenging. I trust in your ability to know the basic logic behind each topic. Sliding window Key factor: The use of unordered_map / array to store appearance or index of the chars; Use l and r l stays, indicating the start of the valid string[only change when certain condition met] r keep moving Compare arrays for finding permuation or same string but different order. 424.Longest Repeating Character Replacement The key for Longest Repeating is to count the appearance of each letter in current window That leads us to know the maxCurrent in the window To make sure the window is valid, the entire current length is not over k (current length - maxCurrent \u0026lt;= k). If not, move i ‚Üí decrement vector[i] by 1 Two ways to do:\nvector count to keep track of numbers appearance in current window, we know the string only contains uppercase, vector\u0026lt;int\u0026gt; 26 fit\nFind the max appearance in the current window, to do so, have a function check through the vector to find the maxCurrent everytime To make sure the window is valid, the replacement is not over k (current length - maxCurrent \u0026lt;= k). If not, move i, decrement vector[i] by 1 Update Longest Have maxf only update when a greater num appears.\nReplace if statement by (j - i + 1 - maxf \u0026gt; k) There is a risk when maxf contains outdated chars because it doesn\u0026rsquo;t decrease according to i However, it doesn\u0026rsquo;t hurt for not updating because we are finding the max appearces, the chars that couldn\u0026rsquo;t exceed the maxf will not be updated in longest anyway. Hint 1: Create variables int characterReplacement(string s, int k) { vector\u0026lt;int\u0026gt; m (26, 0); // Store the appearance of chars in current string. int i = 0; // Begin of the current string, cornorstone of Sliding Window. int longest = 0; // The final answer int maxf = 0; // Max frequent } Hint 2: Update vector and maxf in loop // Remeber so far we only move j, not i ! for(int j = 0; j \u0026lt; s.length(); ++j){ m[s[j] - \u0026#39;A\u0026#39;]++; // Find index or 26 letters and increase maxf = max(maxf, m[s[j] - \u0026#39;A\u0026#39;]); // Check max } Hint 3: Move i for(int j = 0; j \u0026lt; s.length(); ++j){ //...Skip // If we remove max appearanc from currentLength and still find more than k non-max chars, shorten the i while(i \u0026lt; s.length() \u0026amp;\u0026amp; j - i + 1 - maxf \u0026gt; k){ m[s[i] - \u0026#39;A\u0026#39;]--; // Update current length frequency i++; } longest = max(j - i + 1, longest); } Full Code int characterReplacement(string s, int k) { vector\u0026lt;int\u0026gt; m (26, 0); int i = 0; int longest = 0; int maxf = 0; for(int j = 0; j \u0026lt; s.length(); ++j){ m[s[j] - \u0026#39;A\u0026#39;]++; maxf = max(maxf, m[s[j] - \u0026#39;A\u0026#39;]); while(i \u0026lt; s.length() \u0026amp;\u0026amp; j - i + 1 - maxf \u0026gt; k){ m[s[i] - \u0026#39;A\u0026#39;]--; i++; } longest = max(j - i + 1, longest); } return longest; } 425. Minimum Window Substring Mininum Window: Have two maps check currentWindow size, same thing as sliding window. The key is to Have a ‚Äúform‚Äù to check if the window is valid (form == 0), once valid, start moving it until the form != 0. Have an arr[2] = {length, starting} to update the answer. Step:\nCreate two maps (dict, currentWindow), store target string into dict Create arr for answer, ‚Äúform‚Äù and i Increment in currentWindow, if (dict also contain the letter and two numbers are the same), decrease ‚Äúform‚Äù; While form == 0, update arr and remove s[i] from currentWindow. Same as step 3 if dict has it and dict[i] \u0026gt; currentWindow[i], increase the form. (Means the letter in currentWindow is less than / not in requirement) Return arr, or ‚Äú‚Äù class Solution { public: string minWindow(string s, string t) { unordered_map\u0026lt;char, int\u0026gt; dict; unordered_map\u0026lt;char, int\u0026gt; currentWindow; for(const char\u0026amp; c : t){ dict[c]++; } int i = 0; int form = dict.size(); int arr [] = {-1, 0}; for(int j = 0; j \u0026lt; s.length(); ++j){ currentWindow[s[j]]++; if(dict.count(s[j]) \u0026amp;\u0026amp; dict[s[j]] == currentWindow[s[j]]){ form--; } while(i \u0026lt;= j \u0026amp;\u0026amp; form == 0){ if(arr[0] == -1 || j - i + 1 \u0026lt; arr[0]){ arr[0] = j - i + 1; arr[1] = i; } currentWindow[s[i]]--; if(dict.count(s[i]) \u0026amp;\u0026amp; dict[s[i]] \u0026gt; currentWindow[s[i]]){ ++form; } ++i; } } return arr[0] == -1? \u0026#34;\u0026#34; : s.substr(arr[1], arr[0]); } }; 426. Sliding Window Maximum The key for Sliding Window Maximum is if a num is maxCurrent, we don‚Äôt need any number before it. And if the incoming number is greater than deque back, we can smash it Step:\nCreate a deque to store index If deque not empty and incoming is greater, smash anything is smaller Check if dq front is out of bound (i \u0026gt; dq.front()) if(j + 1 \u0026gt;= k) push_back result and move the i. (The if statement checks if j+1 \u0026lt; k, which we haven‚Äôt insert enough elements to meet the window size, j is index, ex. If k = 3, j at least should be 2 in index) class Solution { public: vector\u0026lt;int\u0026gt; maxSlidingWindow(vector\u0026lt;int\u0026gt;\u0026amp; nums, int k) { deque\u0026lt;int\u0026gt; sta; // store index int i = 0; vector\u0026lt;int\u0026gt; answer; for(int j = 0; j \u0026lt; nums.size(); ++j){ while(!sta.empty() \u0026amp;\u0026amp; nums[sta.back()] \u0026lt;= nums[j]){ sta.pop_back(); } sta.push_back(j); if(sta.front() \u0026lt; i){ sta.pop_front(); } if(j - i + 1 \u0026gt;= k){ answer.push_back(nums[sta.front()]); ++i; } } return answer; } }; Stack 155. Min Stack The key of Min Stack is to use two stacks: nums and min_stack. The nums stack stores all the values, while the min_stack only stores the current minimum values and updates when a new value \u0026lt;= stack.top.\nYou might wonder, \u0026ldquo;What about when the incoming value is greater than the top of the stack? Shouldn\u0026rsquo;t it be stored in min_stack too?\u0026rdquo; The answer is no. You might think that if a larger value should be stored somewhere at the bottom of min_stack so that when all the smaller numbers are popped, this larger value will be needed. But that\u0026rsquo;s not true. When pop() is called, larger numbers will be popped before smaller ones, so there\u0026rsquo;s no need to store them in min_stack.\nThere are two approaches to solving this:\nCreate nums and min_stack.\nFor Push(): push the value into nums and push into min_stack only if the condition is met.\nFor Pop(): pop from min_stack only if nums.top() == min_stack.top().\nConsider a scenario where the input is something like // 2 2 2 2 2. We don‚Äôt want to store all these values in the stack. Instead, create a pair\u0026lt;int, appearance\u0026gt; to keep track of the numbers and their frequencies.\nclass MinStack { public: stack\u0026lt;int\u0026gt; sta; stack\u0026lt;int\u0026gt; min_track; MinStack() { } void push(int val) { if(min_track.empty() || val \u0026lt;= min_track.top()){ min_track.push(val); } sta.push(val); } void pop() { if(!min_track.empty() \u0026amp;\u0026amp; min_track.top() == sta.top()){ min_track.pop(); } sta.pop(); } int top() { return sta.top(); } int getMin() { return min_track.top(); } }; 150. Evaluate Reverse Polish Notation Polish Notation should be straightforward, the key is pushed back numbers to stack every time the calculation is done! If we encounter a symbol, then we do the calculation from stack. Step:\nCreate a stack\nCheck if val is digit, if so, push to stack and continue; If(token.size() \u0026gt; 1 || isdigit(token[0])) If we skip step 2, then val is an operator. Perform the operator and store it back to stack. Eventually the stack will have only one num (the answer), return stack.top() int evalRPN(vector\u0026lt;string\u0026gt;\u0026amp; tokens) { stack\u0026lt;int\u0026gt; sta; // stores number; for(string\u0026amp; s : tokens){ if(isdigit(s[0]) || (s[0] == \u0026#39;-\u0026#39; \u0026amp;\u0026amp; s.length() \u0026gt; 1)){ sta.push(stoi(s)); continue; } int num_1 = sta.top(); sta.pop(); if(s == \u0026#34;+\u0026#34;) sta.top() += num_1; if(s == \u0026#34;-\u0026#34;) sta.top() -= num_1; if(s == \u0026#34;*\u0026#34;) sta.top() *= num_1; if(s == \u0026#34;/\u0026#34;) sta.top() /= num_1; } return sta.top(); } 22. Generate Parentheses For generate parentheses We should know that we need ‚Äúopen‚Äù and ‚Äúclose‚Äù to both equal to n to push Whenever open == close, ex: () / (( )) // () (), we could only add an open bracket. Therefore we should visit open bracket first Only adding a close bracket if close \u0026lt; open, means we have extra open to be matched. Step:\nBacktracking, we should create a helper function (vector answer, string temp, int n, int open, int close) If open and close both == n, push into answer If open \u0026lt; n, temp push an open bracket and helper(open + 1), finally remove temp.back If open \u0026gt; close, same thing, but push close bracket. void helper(vector\u0026lt;string\u0026gt;\u0026amp; answer, string s, int left, int right){ if(left == 0 \u0026amp;\u0026amp; right == 0){ answer.push_back(s); return; } if(left == right){ helper(answer, s + \u0026#34;(\u0026#34;, left - 1, right); }else if(left \u0026lt; right){ if(left != 0) helper(answer, s + \u0026#34;(\u0026#34;, left - 1, right); if(right != 0) helper(answer, s + \u0026#34;)\u0026#34;, left, right - 1); } } vector\u0026lt;string\u0026gt; generateParenthesis(int n) { vector\u0026lt;string\u0026gt; answer; helper(answer, \u0026#34;\u0026#34;, n, n); return answer; } 23. Daily Temperatures For Daily Temperatures, I‚Äôm correct with monolithic stack in the first place and obtained a solution by myself. The key is having a pair {temperature, index} in the stack. And pop only if currentTemp is higher [warmer], else push into stack Step:\nCreate a stack and vector for answer If sta not empty \u0026amp;\u0026amp; currentTemp \u0026gt; sta.top() answer[sta.top().second] = the gap in days pop from stack Else, push into stack vector\u0026lt;int\u0026gt; dailyTemperatures(vector\u0026lt;int\u0026gt;\u0026amp; temperatures) { stack\u0026lt;int\u0026gt; sta; vector\u0026lt;int\u0026gt; answer (temperatures.size(), 0); for(int i = 0; i \u0026lt; temperatures.size(); ++i){ while(!sta.empty() \u0026amp;\u0026amp; temperatures[i] \u0026gt; temperatures[sta.top()]){ answer[sta.top()] = (i - sta.top()); sta.pop(); } sta.push(i); } return answer; } 24. Car Fleet The key of Car Fleet that we are dealing with the time cars get to the destination based on position and speed. Then if two cars spend the same time getting to the final, they will meet. Or the car behind spends less time (faster) to reach, they will also meet. Step:\nCreate a vector\u0026lt;position, double time\u0026gt; and store all the values Sort the vector based on position Make a fleet counter and maxTime Start from the back where the car is the closest to destination, and if the time it spends is greater than maxTime means the currentTime is not catching the previous carfleet, we should therefore increment the carfleet by one and update maxTime class Solution { public: int carFleet(int target, vector\u0026lt;int\u0026gt;\u0026amp; position, vector\u0026lt;int\u0026gt;\u0026amp; speed) { vector\u0026lt;pair\u0026lt;int, double\u0026gt;\u0026gt; cars(position.size()); //(destination - position[i] / speed[i]) for(int i = 0; i \u0026lt; position.size(); ++i){ double time = (double)(target - position[i]) / speed[i]; cars[i] = {position[i], time}; } sort(cars.begin(), cars.end()); int carFleet = 0; double maxTime = 0.0; for(int i = cars.size() - 1; i \u0026gt;= 0; --i){ double time = cars[i].second; if(time \u0026gt; maxTime){ maxTime = time; carFleet++; } } return carFleet; } }; 84. Largest Rectangle in Histogram The idea for Largest Rectangle is we should know how far a unit can expand, and we should maintain it in the stack before that happens. And until when we reach a smaller height, we reach the end point, then we should pop from the stack and calculate the width (the initial point to expanding end) and height(initial height).\nFor the currentHeight, because we pop from stack until reaching a smaller unit where currentHeight cannot expand, we make that as our initial height for current.\nStep:\nCreate a stack \u0026lt;start, height\u0026gt;, maxArea for answer When stack is not empty and currentHeight is smaller, we pop the stack and update maxArea and start position of currentHeight Then push {start position, currentHeight} to stack After the loop, there are elements left in the stack which means these are heights that can expand till the end. Therefore we should update the maxArea by height * width (width is endpoint - start) class Solution { public: int largestRectangleArea(vector\u0026lt;int\u0026gt;\u0026amp; heights) { stack\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; sta; // \u0026lt;start, height\u0026gt; int maxArea = 0; for(int i = 0; i \u0026lt; heights.size(); ++i){ int start = i; while(!sta.empty() \u0026amp;\u0026amp; heights[i] \u0026lt; sta.top().second){ int width = i - sta.top().first; int height = sta.top().second; maxArea = max(maxArea, height * width); start = sta.top().first; sta.pop(); } sta.push({start,heights[i]}); } int n = heights.size(); while(!sta.empty()){ pair\u0026lt;int, int\u0026gt; p = sta.top(); sta.pop(); maxArea = max(maxArea, p.second * (n - p.first)); } return maxArea; } }; Binary Search 74. Search a 2D Matrix The key of 2D Matrix is to recognize that not only is each row ordered, but each horizontal line is also ordered. This allows us to perform a binary search on the horizontal lines to find the target row, followed by a normal binary search within that row. Therefore we downgrade a 2D matrix to a 1D array for binary search. Step:\nCreate an row variable Check if the target \u0026gt; last element in each row if so, increase the row else break Check edge case when target is way bigger than the entire matrix and therefore not in it, return false Create left and right, perform binary search bool searchMatrix(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; matrix, int target) { // Look for the row we want, downgrade our searching range from matrix to an array int row = 0; while(row \u0026lt; matrix.size()){ if(target \u0026gt; matrix[row].back()){ ++row; }else{ break; } } // Check edge case target exceed the last element in matrix if(row \u0026gt;= matrix.size()){ return false; } vector\u0026lt;int\u0026gt;\u0026amp; arr = matrix[row]; //target row // Simple binary search int left = 0, right = arr.size() - 1; while(left \u0026lt;= right){ int mid = (right - left) / 2 + left; if(arr[mid] == target){ return true; }else if(arr[mid] \u0026lt; target){ left = mid + 1;; }else{ right = mid - 1; } } return false; } 875. Koko Eating Bananas The key of Koko Eating Bananas is that we should decide what k bananas Koko eats, it can eat anywhere from 1 to the max in the piles, because anymore it will stop eating for one round. Therefore do a binary search based on 1 to max Step:\nCreate low = 1, high to be maxPile, answer Create an hour counting, put it long int for number floating, binary search through the array. If the hour is within time, update the answer to be minimum of (mid, answer) Hour can be calculated as: hour += pile / mid + (pile % mid != 0) Or hour += ceil((double) pile / mid) Or hour += (pile + speed - 1) / speed Return answer; int helper(vector\u0026lt;int\u0026gt;\u0026amp; piles, int speed){ int hour = 0; for(int pile : piles){ hour += (pile + speed - 1) / speed; // clever solution } return hour; }; int minEatingSpeed(vector\u0026lt;int\u0026gt;\u0026amp; piles, int h) { // find max int maxEat = 0; for(int pile : piles){ maxEat = max(maxEat, pile); } int left = 1, right = maxEat; int answer = maxEat; while(left \u0026lt;= right){ int mid = (right - left) / 2 + left; int time = helper(piles, mid); if(time \u0026gt; h){ left = mid + 1; }else{ answer = mid; right = mid - 1; } } return answer; } 153. Find Minimum in Rotated Sorted Array For Find Minimum in Rotated Array, I am right in the first place:\nin a normal situation: left \u0026lt; mid \u0026lt; right, if rotation happens, where mid \u0026gt; right : ‚Äú4 5 6 7 1 2 3‚Äù, left = mid + 1. Else, it means mid \u0026lt;= right, which is a normal array or ‚Äú6 7 1 2 3‚Äù where mid is the number. Set right = mid; Also for the while condition, we do left \u0026lt; right, we don\u0026rsquo;t need to check left == right. Because if left even equals to right, we found the minimum value\nStep:\nCreate left and right while(left \u0026lt; right), if (mid \u0026gt; right) left = mid + 1. Else right = mid; Return nums[left] or nums[right] class Solution { public: int findMin(vector\u0026lt;int\u0026gt;\u0026amp; nums) { //find the rotation point // suppose: Left \u0026lt; right // left \u0026lt; mid \u0026lt; right // right \u0026lt; mid: 4 5 6 7 1 2 3, left = mid + 1 // right \u0026gt; mid: 8 2 3 4 5 6 7, right = mid int left = 0, right = nums.size() - 1, mid = 0; while(left \u0026lt; right){ mid = (right - left) / 2 + left; if(nums[right] \u0026gt;= nums[mid]){ right = mid; }else{ left = mid + 1; } } return nums[left]; //binary search } }; 33. Search in Rotated Sorted Array There are two ways to do Search in Rotated Sorted Array. One as we know, find the minimum rotation starter, and see if the target is a left or right sorted array. Another way is to do everything in one shot, which determines if the array is left sorted or right sorted. Here only explain the situation of second method which is harder Step:\nCreate left and right ptr while(left \u0026lt;= right), if(mid == target), return mid. If (left \u0026lt;= mid), it\u0026rsquo;s left sorted ‚Äú//1 2 3 4 5 6 7 or //3 4 5 6 7 1 2‚Äù, we need to figure out if the target is on the left or right. If (target \u0026gt; nums[mid] || target \u0026lt; nums[left]) left = mid + 1. Else right = mid - 1; Because mid \u0026gt; left, so if target \u0026gt; mid, that means target is also \u0026gt; left, we eliminate the entire left side, so we should go to right. If target \u0026lt;= mid, it could be the second case where mid = 6, and we have nums on left and right meet the condition, so if target \u0026lt; left, we go right. Right side the same idea. class Solution { public: int search(vector\u0026lt;int\u0026gt;\u0026amp; nums, int target) { int left = 0, right = nums.size() - 1; while(left \u0026lt;= right){ int mid = (right - left) / 2 + left; if(nums[mid] == target){ return mid; }else if(nums[mid] \u0026gt; nums[right]){ if(target \u0026gt;= nums[left] \u0026amp;\u0026amp; target \u0026lt; nums[mid]){ right = mid - 1; }else{ left = mid + 1; } }else{ if(target \u0026lt;= nums[right] \u0026amp;\u0026amp; target \u0026gt; nums[mid]){ left = mid + 1; }else{ right = mid - 1; } } //4 5 6 7 0 1 2 //3 4 5 6 7 0 1 //5 6 7 0 1 2 4 //6 7 0 1 3 4 5 } return -1; } }; //0 1 2 3 4 5 6 7 //4 5 6 7 0 1 2 3 4. Median of Two Sorted Arrays There are three approaches for Median of Two Sorted Arrays: Merge the two arrays and perform a binary search. This takes O(m + n) time. Start from the beginning of both arr1 and arr2. Since we are looking for the median (the middle value), we can compare values one by one and move the pointer forward until we reach log(m+n) comparisons. Perform a binary search in the smaller array, which is the method I will explain. Steps:\nCompare the two arrays and place the smaller array first. This is important because performing the search on the smaller array helps to eliminate the case where one array is empty.\nCreate high and low pointers for the binary search on arr1.\nWhile low \u0026lt;= high, create a mid pointer for arr1 and a corresponding mid pointer for arr2. The total + 1 adjustment accounts for odd numbers, as we want to find the middle number.\nDefine left1 as arr1[i - 1] and right1 as arr1[i] (the middle value in arr1). Define left2 as arr2[j - 1] and right2 as arr2[j](the middle value in arr2).\nBy the nature of sorted arrays, left1 \u0026lt; right1 and left2 \u0026lt; right2 by default.\nWe should check if left1 \u0026lt;= right2 and left2 \u0026lt;= right1. If both conditions are met, we\u0026rsquo;ve found the left sorted partition. Update the result based on whether the total length is odd or even, then exit the loop. If left1 \u0026gt; right1, it means the current partition is too large, so adjust by setting right = i - 1. Otherwise, if left2 \u0026gt; right1, it indicates that arr1 is too small, so expand the search by setting left = i + 1.\nclass Solution { public: int p1 = 0, p2 = 0; int mergeSort(vector\u0026lt;int\u0026gt;\u0026amp; nums1, vector\u0026lt;int\u0026gt;\u0026amp; nums2){ if(p1 \u0026lt; nums1.size() \u0026amp;\u0026amp; p2 \u0026lt; nums2.size()){ return nums1[p1] \u0026lt; nums2[p2] ? nums1[p1++] : nums2[p2++]; }else if(p1 \u0026lt; nums1.size()){ return nums1[p1++]; }else{ return nums2[p2++]; } return -1; } double findMedianSortedArrays(vector\u0026lt;int\u0026gt;\u0026amp; nums1, vector\u0026lt;int\u0026gt;\u0026amp; nums2) { int m = nums1.size(), n = nums2.size(); if((m+n) % 2 == 0){ for(int i = 0; i \u0026lt; (m+n) / 2 - 1; ++i){ mergeSort(nums1, nums2); } return (double)(mergeSort(nums1, nums2) + mergeSort(nums1, nums2)) / 2; }else{ for(int i = 0; i \u0026lt; (m+n) / 2; ++i){ mergeSort(nums1, nums2); } return mergeSort(nums1, nums2); } } }; ","permalink":"https://www.ziirui-resume-website.com/posts/tech/leetcode_150/","summary":"Introduction Neetcode 150 is a popular collection of Leetcode problems designed to help programmers prepare for coding interviews. However, the tutorial videos may not always provide the most comprehensive explanations for full understanding. Therefore, I\u0026rsquo;ve decided to document my thought process while solving these problems, in the hope that it might help some of my readers. Note: This post won\u0026#39;t cover all the questions from Neetcode 150. Instead, I\u0026#39;ll focus on the ones I found particularly tricky / challenging. I trust in your ability to know the basic logic behind each topic. Sliding window Key factor: The use of unordered_map / array to store appearance or index of the chars; Use l and r l stays, indicating the start of the valid string[only change when certain condition met] r keep moving Compare arrays for finding permuation or same string but","title":"Leetcode 150"},{"content":" Name: Zirui Zheng Base: New York Career: Engineer Love: Food, Music, Capybara Blog Source Source Code Blog principle My career, hustle, and life Site Inspiration ","permalink":"https://www.ziirui-resume-website.com/about/","summary":"Name: Zirui Zheng Base: New York Career: Engineer Love: Food, Music, Capybara Blog Source Source Code Blog principle My career, hustle, and life Site Inspiration","title":"üôãüèª‚Äç‚ôÇÔ∏èAbout Me"}]